/*
Gapstone is a Go binding for the Capstone disassembly library.
For examples,try reading the *_test.go files.

	Library Author: Nguyen Anh Quynh
	Binding Author: Ben Nagy
	License: BSD style - see LICENSE file for details
    (c) 2013 COSEINC. All Rights Reserved.

    THIS FILE WAS AUTO-GENERATED -- DO NOT EDIT!
    Command: ./genresorces.sh capstone/tests/test_m680x.c
    Created at: 2025-04-25 12:56:14

*/

package gapstone

//=== Found #define values in capstone/tests/test_m680x.c ===

var m680xCodes = map[string]string{
	// M6800_CODE="\x01\x09\x36\x64\x7f\x74\x10\x00\x90\x10\xA4\x10\xb6\x10\x00\x39"
	"M6800_CODE": "\x01\x09\x36\x64\x7f\x74\x10\x00\x90\x10\xA4\x10\xb6\x10\x00\x39",
	// M6801_CODE="\x04\x05\x3c\x3d\x38\x93\x10\xec\x10\xed\x10\x39"
	"M6801_CODE": "\x04\x05\x3c\x3d\x38\x93\x10\xec\x10\xed\x10\x39",
	// M6805_CODE="\x04\x7f\x00\x17\x22\x28\x00\x2e\x00\x40\x42\x5a\x70\x8e\x97\x9c\xa0\x15\xad\x00\xc3\x10\x00\xda\x12\x34\xe5\x7f\xfe"
	"M6805_CODE": "\x04\x7f\x00\x17\x22\x28\x00\x2e\x00\x40\x42\x5a\x70\x8e\x97\x9c\xa0\x15\xad\x00\xc3\x10\x00\xda\x12\x34\xe5\x7f\xfe",
	// M6808_CODE="\x31\x22\x00\x35\x22\x45\x10\x00\x4b\x00\x51\x10\x52\x5e\x22\x62\x65\x12\x34\x72\x84\x85\x86\x87\x8a\x8b\x8c\x94\x95\xa7\x10\xaf\x10\x9e\x60\x7f\x9e\x6b\x7f\x00\x9e\xd6\x10\x00\x9e\xe6\x7f"
	"M6808_CODE": "\x31\x22\x00\x35\x22\x45\x10\x00\x4b\x00\x51\x10\x52\x5e\x22\x62\x65\x12\x34\x72\x84\x85\x86\x87\x8a\x8b\x8c\x94\x95\xa7\x10\xaf\x10\x9e\x60\x7f\x9e\x6b\x7f\x00\x9e\xd6\x10\x00\x9e\xe6\x7f",
	// HCS08_CODE="\x32\x10\x00\x9e\xae\x9e\xce\x7f\x9e\xbe\x10\x00\x9e\xfe\x7f\x3e\x10\x00\x9e\xf3\x7f\x96\x10\x00\x9e\xff\x7f\x82"
	"HCS08_CODE": "\x32\x10\x00\x9e\xae\x9e\xce\x7f\x9e\xbe\x10\x00\x9e\xfe\x7f\x3e\x10\x00\x9e\xf3\x7f\x96\x10\x00\x9e\xff\x7f\x82",
	// M6811_CODE="\x02\x03\x12\x7f\x10\x00\x13\x99\x08\x00\x14\x7f\x02\x15\x7f\x01\x1e\x7f\x20\x00\x8f\xcf\x18\x08\x18\x30\x18\x3c\x18\x67\x18\x8c\x10\x00\x18\x8f\x18\xce\x10\x00\x18\xff\x10\x00\x1a\xa3\x7f\x1a\xac\x1a\xee\x7f\x1a\xef\x7f\xcd\xac\x7f"
	"M6811_CODE": "\x02\x03\x12\x7f\x10\x00\x13\x99\x08\x00\x14\x7f\x02\x15\x7f\x01\x1e\x7f\x20\x00\x8f\xcf\x18\x08\x18\x30\x18\x3c\x18\x67\x18\x8c\x10\x00\x18\x8f\x18\xce\x10\x00\x18\xff\x10\x00\x1a\xa3\x7f\x1a\xac\x1a\xee\x7f\x1a\xef\x7f\xcd\xac\x7f",
	// CPU12_CODE="\x00\x04\x01\x00\x0c\x00\x80\x0e\x00\x80\x00\x11\x1e\x10\x00\x80\x00\x3b\x4a\x10\x00\x04\x4b\x01\x04\x4f\x7f\x80\x00\x8f\x10\x00\xb7\x52\xb7\xb1\xa6\x67\xa6\xfe\xa6\xf7\x18\x02\xe2\x30\x39\xe2\x10\x00\x18\x0c\x30\x39\x10\x00\x18\x11\x18\x12\x10\x00\x18\x19\x00\x18\x1e\x00\x18\x3e\x18\x3f\x00"
	"CPU12_CODE": "\x00\x04\x01\x00\x0c\x00\x80\x0e\x00\x80\x00\x11\x1e\x10\x00\x80\x00\x3b\x4a\x10\x00\x04\x4b\x01\x04\x4f\x7f\x80\x00\x8f\x10\x00\xb7\x52\xb7\xb1\xa6\x67\xa6\xfe\xa6\xf7\x18\x02\xe2\x30\x39\xe2\x10\x00\x18\x0c\x30\x39\x10\x00\x18\x11\x18\x12\x10\x00\x18\x19\x00\x18\x1e\x00\x18\x3e\x18\x3f\x00",
	// HD6301_CODE="\x6b\x10\x00\x71\x10\x00\x72\x10\x10\x39"
	"HD6301_CODE": "\x6b\x10\x00\x71\x10\x00\x72\x10\x10\x39",
	// M6809_CODE="\x06\x10\x19\x1a\x55\x1e\x01\x23\xe9\x31\x06\x34\x55\xa6\x81\xa7\x89\x7f\xff\xa6\x9d\x10\x00\xa7\x91\xa6\x9f\x10\x00\x11\xac\x99\x10\x00\x39\xA6\x07\xA6\x27\xA6\x47\xA6\x67\xA6\x0F\xA6\x10\xA6\x80\xA6\x81\xA6\x82\xA6\x83\xA6\x84\xA6\x85\xA6\x86\xA6\x88\x7F\xA6\x88\x80\xA6\x89\x7F\xFF\xA6\x89\x80\x00\xA6\x8B\xA6\x8C\x10\xA6\x8D\x10\x00\xA6\x91\xA6\x93\xA6\x94\xA6\x95\xA6\x96\xA6\x98\x7F\xA6\x98\x80\xA6\x99\x7F\xFF\xA6\x99\x80\x00\xA6\x9B\xA6\x9C\x10\xA6\x9D\x10\x00\xA6\x9F\x10\x00"
	"M6809_CODE": "\x06\x10\x19\x1a\x55\x1e\x01\x23\xe9\x31\x06\x34\x55\xa6\x81\xa7\x89\x7f\xff\xa6\x9d\x10\x00\xa7\x91\xa6\x9f\x10\x00\x11\xac\x99\x10\x00\x39\xA6\x07\xA6\x27\xA6\x47\xA6\x67\xA6\x0F\xA6\x10\xA6\x80\xA6\x81\xA6\x82\xA6\x83\xA6\x84\xA6\x85\xA6\x86\xA6\x88\x7F\xA6\x88\x80\xA6\x89\x7F\xFF\xA6\x89\x80\x00\xA6\x8B\xA6\x8C\x10\xA6\x8D\x10\x00\xA6\x91\xA6\x93\xA6\x94\xA6\x95\xA6\x96\xA6\x98\x7F\xA6\x98\x80\xA6\x99\x7F\xFF\xA6\x99\x80\x00\xA6\x9B\xA6\x9C\x10\xA6\x9D\x10\x00\xA6\x9F\x10\x00",
	// HD6309_CODE="\x01\x10\x10\x62\x10\x10\x7b\x10\x10\x00\xcd\x49\x96\x02\xd2\x10\x30\x23\x10\x38\x10\x3b\x10\x53\x10\x5d\x11\x30\x43\x10\x11\x37\x25\x10\x11\x38\x12\x11\x39\x23\x11\x3b\x34\x11\x8e\x10\x00\x11\xaf\x10\x11\xab\x10\x11\xf6\x80\x00"
	"HD6309_CODE": "\x01\x10\x10\x62\x10\x10\x7b\x10\x10\x00\xcd\x49\x96\x02\xd2\x10\x30\x23\x10\x38\x10\x3b\x10\x53\x10\x5d\x11\x30\x43\x10\x11\x37\x25\x10\x11\x38\x12\x11\x39\x23\x11\x3b\x34\x11\x8e\x10\x00\x11\xaf\x10\x11\xab\x10\x11\xf6\x80\x00",
}

//=== Found platform entries in capstone/tests/test_m680x.c ===

var m680xPlatforms = []platform{
	{
		// -------------------------------------------
		// Platform Entry (line 251):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6301)
		// Code: HD6301_CODE
		// Comment: "M680X_HD6301"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6301),
		code:    m680xCodes["HD6301_CODE"],
		comment: "M680X_HD6301",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 258):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6309)
		// Code: HD6309_CODE
		// Comment: "M680X_HD6309"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6309),
		code:    m680xCodes["HD6309_CODE"],
		comment: "M680X_HD6309",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 265):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6800)
		// Code: M6800_CODE
		// Comment: "M680X_M6800"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6800),
		code:    m680xCodes["M6800_CODE"],
		comment: "M680X_M6800",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 272):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6801)
		// Code: M6801_CODE
		// Comment: "M680X_M6801"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6801),
		code:    m680xCodes["M6801_CODE"],
		comment: "M680X_M6801",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 279):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6805)
		// Code: M6805_CODE
		// Comment: "M680X_M68HC05"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6805),
		code:    m680xCodes["M6805_CODE"],
		comment: "M680X_M68HC05",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 286):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6808)
		// Code: M6808_CODE
		// Comment: "M680X_M68HC08"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6808),
		code:    m680xCodes["M6808_CODE"],
		comment: "M680X_M68HC08",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 293):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6809)
		// Code: M6809_CODE
		// Comment: "M680X_M6809"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6809),
		code:    m680xCodes["M6809_CODE"],
		comment: "M680X_M6809",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 300):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_6811)
		// Code: M6811_CODE
		// Comment: "M680X_M68HC11"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_6811),
		code:    m680xCodes["M6811_CODE"],
		comment: "M680X_M68HC11",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 307):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_CPU12)
		// Code: CPU12_CODE
		// Comment: "M680X_CPU12"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_CPU12),
		code:    m680xCodes["CPU12_CODE"],
		comment: "M680X_CPU12",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
	{
		// -------------------------------------------
		// Platform Entry (line 314):
		// Architecture: CS_ARCH_M680X
		// Mode: (CS_MODE_M680X_HCS08)
		// Code: HCS08_CODE
		// Comment: "M680X_HCS08"
		arch:    CS_ARCH_M680X,
		mode:    (CS_MODE_M680X_HCS08),
		code:    m680xCodes["HCS08_CODE"],
		comment: "M680X_HCS08",
		options: []option{
			{CS_OPT_DETAIL, CS_OPT_ON},
		},
	},
}
